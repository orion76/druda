/*
 This Material form design based on Jon Uhlmann work of Form fields with material design, in pure CSS
 https://codepen.io/jonnitto/

 */

body,
input,
select,
textarea,
body * {
  font-family: $form-font-family;
  box-sizing: border-box;

  &::after,
  &::before {
    box-sizing: border-box;
  }
}

.button-container {
  text-align: center;
}

// The Styles for the form
fieldset {
  margin: $form-fieldset-margin;
  padding: 0;
  border: none;
}

.form-item {
  position: relative;
  width: 100%;
  margin-top: ($form-gap * 1.5);
  margin-bottom: ($form-gap * 1.5);
}

.form-inline {
  > .form-item,
  > .btn {
    display: inline-block;
    margin-bottom: 0;
  }
}

.form-item .description {
  margin-top: $form-spacer;
  margin-bottom: $form-spacer;
  margin-left: $form-spacer;
  color: $form-label-color;
  font-size: $input-active-font-size;
}

.description {
  .form-type-checkbox &,
  .form-type-radio &,
  .form-item & {
    // position: absolute;
    width: 100%;
  }

  .form-type-checkbox & {
    position: relative;
    margin-bottom: $input-font-size;
    padding-left: $form-checkbox-gap;
  }

  .form-type-radio & {
    padding-top: ($form-spacer * 2);
    margin-top: -1 * $input-font-size;
    padding-left: $form-checkbox-gap;
  }

}

.form-required {
  white-space: nowrap;

  &:after {
    @include material-icons();
    content: "mode_edit";
    margin-left: 5px;
    opacity: 1;
    position: relative;
    top: 0;

    color: $input-required-color;
    font-size:inherit;
    vertical-align: middle;
  }
}

//.form-item.form-type-select,
//.form-item.form-type-textfield,
//.form-item.form-type-machine-name,
//.form-item.form-type-date,
//.form-item.form-type-textarea
.form-item {
  // scss-lint:disable QualifyingElement, NestingDepth
  input:not(.form-checkbox) {
    height: ($input-font-size * 1.9);
  }

  textarea {
    // resize: none;
  }

  select {
    width: 100%;
    font-size: $input-font-size;
    height: ($input-font-size * 1.9);
    padding: $form-spacer $form-spacer ($form-spacer / 2);
    background: none;
    border: none;
    line-height: 1.6;
    //box-shadow: none;
    @include z-depth(0);

    appearance: none;
    position: relative;

    & + i,
    & + label + i {
      @include add-icon-after('expand_more');

      &:after {
        position: absolute;
        top: -1.8rem;
        right: 0.1rem;
        pointer-events: none;
        font-size: 1.8rem;
      }
    }

    option {
      background-color: #fff;
      font-size: $input-active-font-size;
    }
  }

  .control-label {
    // pointer-events: none;
    padding-left: $form-spacer;
    z-index: 1;
    color: $form-label-color;
    font-size: $input-font-size;
    font-weight: normal;
    transition: all $form-transition-speed ease;
  }

  .input-group,
  input,
  textarea,
  select {
    ~ .control-label {
      position: absolute;
      top: ($input-font-size / 4);
    }
  }

  .bar {
    position: relative;
    margin-top: 1px;
    border-bottom: ($input-font-size / 16) solid $form-input-border-color;
    display: block;

    &::before {
      content: '';
      height: ($input-font-size / 8);
      width: 0;
      left: 50%;
      bottom: ($input-font-size / -16);
      position: absolute;
      background: $form-focus-color;
      transition: left $form-transition-speed ease, width $form-transition-speed ease;
      z-index: 2;
    }
  }

  input,
  textarea {
    display: block;
    background: none;
    padding: $form-spacer $form-spacer ($form-spacer / 2);
    font-size: $input-font-size;
    border-width: 0;
    border-color: transparent;
    line-height: 1.9;
    width: 100%;
    color: transparent;
    transition: all $form-transition-speed ease;
    @include z-depth(0);
  }

  input[type="file"] {
    line-height: 1;

    ~ .bar {
      display: none;
    }
  }

  .input-group,
  select,
  input:focus,
  input:valid,
  input.form-file,
  div.form-managed-file,
  input.has-value,
  textarea:focus,
  textarea:valid,
  textarea.form-file,
  textarea.has-value {
    color: $form-input-color;

    ~ .control-label {
      position: absolute;
      font-size: $input-active-font-size;
      color: $form-active-color;
      top: $label-active-top;
      left: 0;
    }
  }

  &.form-type-vertical-tabs {
    > .control-label {
      // Control label before input.
      font-size: $input-active-font-size;
      color: $form-active-color;
    }
  }


  &.form-type-item {
    color: $form-input-color;

    .control-label {
      position: absolute;
      font-size: $input-active-font-size;
      color: $form-active-color;
      top: $label-active-top;
      left: 0;
    }
  }

  &.form-type-textarea {
    .cke {
      ~ .control-label {
        top: 2 * $label-active-top;
      }
    }
  }

  select,
  input,
  textarea {
    &:focus {
      outline: none;

      ~ .control-label {
        color: $form-focus-color;
      }

      ~ .bar {
        &::before {
          width: 100%;
          left: 0;
        }
      }
    }
  }
}

// Radio & Checkbox
.form-checkbox,
.form-type-checkbox,
.form-radio,
.form-type-radio {

  label {
    display: block;
    position: relative;
    padding-left: $form-checkbox-gap;
    color: $form-input-color;
    cursor: pointer;
    line-height: 1;
    text-align: left;

    span {
      display: inline-block;
      min-height: 1em;
    }
  }

  input {
    display: inline;
    width: auto;
    height: auto;
    opacity: 0.00000001;
    left: 0;
    line-height: 1;
    padding: 0;
    margin: 0;
    position: absolute;
    color: transparent;
    transition: none;

  }
}

.form-type-radio {
  margin-bottom: $input-font-size;

  .helper {
    position: absolute;
    top: $form-radio-margin;
    left: $form-radio-margin;
    cursor: pointer;
    display: block;
    font-size: $input-font-size;
    user-select: none;
    color: $form-input-border-color;

    &::before,
    &::after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      margin: ($form-spacer * 2);
      width: $input-font-size;
      height: $input-font-size;
      transition: transform $form-transition-speed ease;
      border-radius: 50%;
      border: ($input-font-size / 8) solid currentColor;
    }

    &::after {
      transform: scale(0);
      background-color: $form-focus-color;
      border-color: $form-focus-color;
    }
  }

  label:hover .helper {
    color: $form-focus-color;
  }

  // scss-lint:disable QualifyingElement, NestingDepth
  input:checked {
    ~ .helper {
      &::after {
        transform: scale(0.5);
      }
      &::before {
        color: $form-focus-color;
      }
    }
  }

  input:disabled {
    ~ .helper {
      color: $input-disabled-color;
      cursor: default;
      //border-color: $input-disabled-color;

      &::before,
      &::after {
        // border-color: $input-disabled-color;
        border-color: $input-disabled-color;
        color: $input-disabled-color;
      }
      &::after {
        background-color: $input-disabled-color;
      }
    }
  }
}

.field--type-text-with-summary > .form-item {
  margin-top: ($form-gap * 2.5);
}

.form-item .form-radios {
  .form-type-radio {
    margin-top: $input-font-size;
  }
}

.form-type-checkbox {
  // scss-lint:disable QualifyingElement

  margin-top: ($form-gap * 2);
  margin-bottom: $input-font-size;

  .helper {
    color: $form-input-border-color;
    position: absolute;
    top: $form-checkbox-top;
    left: 0;
    width: $input-font-size;
    height: $input-font-size;
    z-index: 0;
    border: ($input-font-size / 8) solid currentColor;
    border-radius: ($input-font-size / 16);
    transition: border-color $form-transition-speed ease;

    &::before,
    &::after {
      position: absolute;
      height: 0;
      width: ($input-font-size * 0.2);
      background-color: $form-focus-color;
      display: block;
      transform-origin: left top;
      border-radius: ($input-font-size / 4);
      content: '';
      transition: opacity $form-transition-speed ease, height 0s linear $form-transition-speed;
      opacity: 0;
    }

    &::before {
      top: ($input-font-size * 0.65);
      left: ($input-font-size * 0.38);
      transform: rotate(-135deg);
      @include z-depth(0);
    }

    &::after {
      top: ($input-font-size * 0.3);
      left: 0;
      transform: rotate(-45deg);
    }
  }

  label:hover .helper {
    color: $form-focus-color;
  }

  input:checked {
    ~ .helper {
      color: $form-focus-color;

      &::after,
      &::before {
        opacity: 1;
        transition: height $form-transition-speed ease;
      }

      &::after {
        height: ($input-font-size / 2);
      }

      &::before {
        height: ($input-font-size * 1.2);
        transition-delay: $form-transition-speed;
      }
    }
  }
  input:disabled {
    ~ .helper {
      color: $input-disabled-color;
      cursor: default;
      //border-color: $input-disabled-color;

      &::before,
      &::after {
        // border-color: $input-disabled-color;
        background-color: $input-disabled-color;
        color: $input-disabled-color;
      }
    }
  }
}

.form-disabled.form-type-radio,
.form-disabled.form-type-checkbox {
  label {
    color: $input-disabled-color;
    cursor: default;
  }
}

.form-type-radio + .form-type-radio,
.form-type-checkbox + .form-type-radio,
.form-type-checkbox + .form-type-checkbox {
  margin-top: $input-font-size;
}

.form-item .form-checkboxes {
  .form-type-checkbox {
    margin-top: $input-font-size;
  }
}

.form-checkboxes + .description,
.form-radios + .description {
  position: static;
  margin-bottom: ($form-gap * 1.5);
}

.has-error {
  .legend.legend,
  &.form-item .control-label.control-label {
    // Prevent !importantRule
    color: $form-error-color;
  }

  &.form-item,
  &.form-type-checkbox,
  &.form-type-radio,
  &.form-radio {
    .form-help,
    .helper {
      color: $form-error-color;
    }
  }

  .bar {
    &::before {
      background: $form-error-color;
      left: 0;
      width: 100%;
    }
  }
}

/*.button {
  position: relative;
  background: currentColor;
  border: 1px solid currentColor;
  font-size: ($input-font-size * 1.1);
  color: lighten($form-focus-color, 10%);
  // margin:( $form-gap * 2) 0;
  padding: ($form-gap / 2) ($form-gap * 2);
  cursor: pointer;
  transition: background-color $form-transition-speed ease, color $form-transition-speed ease, box-shadow $form-transition-speed ease;
  overflow: hidden;
  box-shadow: $shadow-2;

  span {
    color: #fff;
    position: relative;
    z-index: 1;
  }

  &::before {
    content: '';
    position: absolute;
    background: darken($form-focus-color, 40%);
    border: 50vh solid darken($form-focus-color, 20%);
    width: 30vh;
    height: 30vh;
    border-radius: 50%;
    display: block;
    top: 50%;
    left: 50%;
    z-index: 0;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }

  &:hover {
    color: $form-focus-color;
    box-shadow: $shadow-6;
  }

  &:active,
  &:focus {
    &::before {
      transition: transform ($form-transition-speed * 4) ease, opacity $form-transition-speed ease ($form-transition-speed * 1.3);
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
  }

  &:focus {
    outline: none;
  }
}*/

// Passwords
.form-item {
  .form-type-password + .form-type-password {
    margin-bottom: 0;
  }
}

.password-strength {
  .password-strength__meter {
    height: 0.3em;
  }
}

// Textarea with text format
.form-item-text-format-value {
  margin-bottom: 0;
}

// Form actions and buttons
.form-actions {
  margin-top: $form-gap;
  margin-bottom: 2* $form-gap;
}


details.form-wrapper {
  @include collapsible();

  summary {
    @include collapsible-header();
    &::-webkit-details-marker {
      display: none;
    }

    &:focus {
      outline: 0;
    }

    &:after {
      @include material-icons();
      content: 'expand_more';
      line-height: 1em;
      position: absolute;
      right: 1rem;
      top: 1rem;
    }
  }

  summary[aria-expanded="false"] {
    &:after {
      content: 'expand_more';
    }
  }
  summary[aria-expanded="true"] {
    &:after {
      content: 'expand_less';
    }
  }

  .details-wrapper {
    padding: 1rem 2rem; //prevent nested wrappers from providing too much z-depth
    details.form-wrapper {
      border: 1px solid $collapsible-border-color;
      @include z-depth(0);
    }
    .details-description {
      padding: 10px 0;
    }
  }
}

fieldset {
  @include collapsible();

  &.with-legend {
    padding-top: 4rem;
  }

  legend {
    span.fieldset-legend {
      @include collapsible-header();
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      cursor: default;
    }
  }

  .fieldset-wrapper {
    padding: 1rem 2rem;
  }
}

// Vertical tabs
.vertical-tabs {
  position: relative;
  margin: 0;
  border: 0;

  @media #{$medium-and-up} {
    display: flex;
  }

  //&:before {
  //  content: "";
  //  position: absolute;
  //  top: 0;
  //  bottom: 0;
  //  left: 0;
  //  right: 0;
  //  //z-index: -1;
  //  @include z-level(1);
  //}

  .vertical-tabs__menu {
    margin: 0;
    border-top: 1px solid $collapsible-border-color;
    position: static;

    display: none;

    @media #{$medium-and-up} {
      display: block;
      width: 15em;
      flex: 0 0 auto;
      margin-bottom: $form-gap;
    }

    .vertical-tabs__menu-item {
      border: 1px solid $collapsible-border-color;
      border-top: 0;
      background-color: transparent;
      background-color: $collapsible-inactive-bg;

      a {
        min-height: 4rem;
        outline: none;
        text-decoration: none;

        &:hover {
          outline: none;
        }
      }

      &.is-selected {
        position: relative;
        @include z-level(1);
        //z-index: 100;

        /*&:before {
          content: "";
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          //z-index: -1;
          @include z-level(1);
        }*/

        a {
          background-color: $collapsible-body-bg;
          margin-right: -5px;
        }
        .vertical-tabs__menu-item-title {
        }

      }
    }

    .vertical-tabs__menu-item-title {
    }

    .vertical-tabs__menu-item-summary {
      @include small();
      color: $form-label-color;
    }
  }

  .vertical-tabs__panes {
    flex: 1 0 auto;
    //position: relative;
    padding: $form-gap;
    border: 1px solid $collapsible-border-color;
    margin-left: -1px;
    @include z-level(1);

    details.vertical-tabs__pane {
      border: 0;
      @include z-depth(0);
      margin: 0;

      @include show-on-small();

      > summary {
        @include hide-on-med-and-up();
      }

      > .details-wrapper {
        padding: 0;
        margin: 0;
      }
    }
  }
}

.system-modules details {
  white-space: normal;
}
